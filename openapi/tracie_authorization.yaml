openapi: 3.0.1
info:
  title: Ratepay Payment API
  description: This is the documentation for the Ratepay payment API v2. The API is
    still in development and subject to change. The documentation will evolve as the
    development of the API progresses.
  contact:
    name: Ratepay
    url: https://www.ratepay.com/
    email: info@ratepay.com
  version: "2"
servers:
- url: https://api-integration.ratepay.com/transaction/management
  description: Ratepay Integration Platform
paths:
  /v2/transactions:
    post:
      tags:
      - Authorize transactions
      summary: Authorization request
      description: Perform an authorization request for a transaction.
      operationId: createTransaction
      parameters:
      - name: Prefer
        in: header
        description: "According to RFC 7240: Provide return=representation if you\
          \ prefer that the response to a request includes the current state of the\
          \ resource."
        required: false
        schema:
          type: string
          enum:
          - return=representation
      - name: Unique-Request-ID
        in: header
        description: ID generated by client to uniquely identify the request. It is
          highly recommended to use a UUID version 4. Do not reuse a request ID for
          different calls. See section on idempotency for further details.
        schema:
          maxLength: 64
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequestDto'
        required: true
      responses:
        "406":
          description: Not Acceptable
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/TransactionErrorDto'
        "500":
          description: Technical problem
        "422":
          description: Transaction rejected
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/TransactionErrorDto'
        "201":
          description: Transaction authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionMinimalResponseDto'
  /v2/transactions/{ratepayTransactionId}/refunds:
    post:
      tags:
      - Refund transactions
      summary: Refund request
      description: Refund a previously authorized and captured transaction
      operationId: refundTransaction
      parameters:
      - name: ratepayTransactionId
        in: path
        description: ID of transaction to refund
        required: true
        schema:
          type: string
      - name: Prefer
        in: header
        description: "According to RFC 7240: Provide return=representation if you\
          \ prefer that the response to a request includes the current state of the\
          \ resource."
        required: false
        schema:
          type: string
          enum:
          - return=representation
      - name: Unique-Request-ID
        in: header
        description: ID generated by client to uniquely identify the request. It is
          highly recommended to use a UUID version 4. Do not reuse a request ID for
          different calls. See section on idempotency for further details.
        schema:
          maxLength: 64
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequestDto'
        required: true
      responses:
        "406":
          description: Not Acceptable
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RefundErrorDto'
        "500":
          description: Technical problem
        "404":
          description: Transaction not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RefundErrorDto'
        "451":
          description: Legally not allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RefundErrorDto'
        "422":
          description: Refund declined
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RefundErrorDto'
        "201":
          description: Transaction refunded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundMinimalResponseDto'
  /v2/transactions/{ratepayTransactionId}/captures:
    post:
      tags:
      - Capture transactions
      summary: Capture request
      description: Capture a previously authorized transaction
      operationId: captureTransaction
      parameters:
      - name: ratepayTransactionId
        in: path
        description: ID of transaction to capture
        required: true
        schema:
          type: string
      - name: Prefer
        in: header
        description: "According to RFC 7240: Provide return=representation if you\
          \ prefer that the response to a request includes the current state of the\
          \ resource."
        required: false
        schema:
          type: string
          enum:
          - return=representation
      - name: Unique-Request-ID
        in: header
        description: ID generated by client to uniquely identify the request. It is
          highly recommended to use a UUID version 4. Do not reuse a request ID for
          different calls. See section on idempotency for further details.
        schema:
          maxLength: 64
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaptureRequestDto'
        required: true
      responses:
        "406":
          description: Not Acceptable
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CaptureErrorDto'
        "500":
          description: Technical problem
        "422":
          description: Capture declined
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CaptureErrorDto'
        "404":
          description: Transaction not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CaptureErrorDto'
        "451":
          description: Legally not allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CaptureErrorDto'
        "201":
          description: Transaction captured
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureMinimalResponseDto'
components:
  schemas:
    AddressDto:
      required:
      - city
      - country_code
      - street
      - zip_code
      type: object
      properties:
        street:
          maxLength: 100
          minLength: 0
          pattern: "[<>A-Za-z0-9äöüßÄÖÜ&.:;',+/=?^_\\-`\\[\\]{|}()ÀÁÂÃÅÆÇÈÉÊÌÍÎÐÑÒ\
            ÓÔÕØŒÙÚÛÝÞŠËÏŸàáâãåæçèéêìíîðñòóôõøœùúûýþšëïÿ\\s]*"
          type: string
          example: Schönhauser Allee
        street_number:
          maxLength: 30
          minLength: 0
          pattern: "[<>A-Za-z0-9äöüßÄÖÜ&.:;',+/=?^_\\-`\\[\\]{|}()ÀÁÂÃÅÆÇÈÉÊÌÍÎÐÑÒ\
            ÓÔÕØŒÙÚÛÝÞŠËÏŸàáâãåæçèéêìíîðñòóôõøœùúûýþšëïÿ\\s]*"
          type: string
          example: "84"
        street_addition:
          maxLength: 50
          minLength: 0
          pattern: "[<>A-Za-z0-9äöüßÄÖÜ&.:;',+/=?^_\\-`\\[\\]{|}()ÀÁÂÃÅÆÇÈÉÊÌÍÎÐÑÒ\
            ÓÔÕØŒÙÚÛÝÞŠËÏŸàáâãåæçèéêìíîðñòóôõøœùúûýþšëïÿ\\s]*"
          type: string
          example: "Seitenflügel, 2. HH"
        zip_code:
          maxLength: 10
          minLength: 0
          type: string
          example: "10439"
        city:
          maxLength: 100
          minLength: 0
          pattern: "[<>A-Za-z0-9äöüßÄÖÜ&.:;',+/=?^_\\-`\\[\\]{|}()ÀÁÂÃÅÆÇÈÉÊÌÍÎÐÑÒ\
            ÓÔÕØŒÙÚÛÝÞŠËÏŸàáâãåæçèéêìíîðñòóôõøœùúûýþšëïÿ\\s]*"
          type: string
          example: Berlin
        country_code:
          pattern: "[A-Z]{2}"
          type: string
          example: DE
    BrandingSettingsDto:
      type: object
      properties:
        logo_url:
          type: string
          description: Publicly accessible shop logo to include in buyer correspondences.
          example: http://cdn.example.com/a/b/c/logo-fruits-and-more_400x65.png
        logo_position:
          pattern: LEFT|RIGHT|CENTER
          type: string
          description: "Shop logo position in buyer correspondences. Allowed values:\
            \ LEFT, RIGHT or CENTER."
          example: RIGHT
          enum:
          - LEFT
          - RIGHT
          - CENTER
        highlight_color:
          pattern: "#[a-fA-F0-9]{6}"
          type: string
          description: "The color for the highlighted elements in buyer correspondences\
            \ as HTML HEX color code, e.g. #BADB11."
          example: '#badb11'
      description: Shop branding settings for buyer correspondences.
    BuyerDto:
      required:
      - billing_address
      - person
      type: object
      properties:
        person:
          $ref: '#/components/schemas/PersonDto'
        billing_address:
          $ref: '#/components/schemas/AddressDto'
        language:
          type: string
          example: DE
      description: the buyer who started the transaction
    CorrespondenceSettingsDto:
      required:
      - slangs
      type: object
      properties:
        branding_settings:
          $ref: '#/components/schemas/BrandingSettingsDto'
        slangs:
          $ref: '#/components/schemas/SlangsDto'
      description: Settings for buyer correspondences.
    DeliveryDto:
      type: object
      properties:
        first_name:
          maxLength: 100
          minLength: 1
          type: string
          example: Heinz
        last_name:
          maxLength: 100
          minLength: 1
          type: string
          example: Steeger
        company:
          maxLength: 100
          minLength: 1
          type: string
          example: Berlin Advertising Agency
        address:
          $ref: '#/components/schemas/AddressDto'
      description: delivery address and additional delivery parameters
    ItemDto:
      required:
      - gross_total_price
      - name
      - quantity
      - tax_rate
      type: object
      properties:
        article_number:
          maxLength: 255
          minLength: 1
          pattern: ".*[\\S].*"
          type: string
          description: "The article number of the item, e.g. SKU."
          example: kitchen-utils-1
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: the name of the item
          example: fruit knife
        description:
          maxLength: 511
          minLength: 0
          type: string
          description: a description for the item
          example: "fruit knife with curved blade, 8 cm"
        category:
          maxLength: 511
          minLength: 0
          type: string
          description: a category for the item
          example: household
        tax_rate:
          multipleOf: 0.01
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: The tax rate given in percent.
          example: 19.0
        quantity:
          multipleOf: 0.00000000010
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: ordered quantity of the item
          example: 2
        unit:
          maxLength: 255
          minLength: 0
          type: string
          description: "The arbitrary measurement of the item, e.g. kg, litre, pieces."
          example: piece
        net_unit_price:
          multipleOf: 0.01
          type: number
          description: The net value of one item before taxes.
          example: 15.5
        gross_unit_price:
          multipleOf: 0.01
          type: number
          description: The gross value of one item after taxes.
          example: 18.45
        net_unit_discount:
          multipleOf: 0.01
          maximum: 0.0
          exclusiveMaximum: false
          type: number
          description: The net discount on one item before taxes. Needs to be a negative
            value.
          example: -1.3
        gross_unit_discount:
          multipleOf: 0.01
          maximum: 0.0
          exclusiveMaximum: false
          type: number
          description: The gross discount on one item after taxes. Needs to be a negative
            value.
          example: -1.55
        net_total_price:
          multipleOf: 0.01
          type: number
          description: The net value including discount of these items before taxes.
            net_total_price = (net_unit_price + net_unit_discount) * quantity
          example: 28.4
        gross_total_price:
          multipleOf: 0.01
          type: number
          description: The gross value including discount of these items after taxes.
            gross_total_price = (gross_unit_price + gross_unit_discount) * quantity
          example: 33.8
      description: "list of special items contained in the transaction, e.g. shipping\
        \ costs or discounts"
    PaymentMethodDto:
      required:
      - payment_option
      - transfer_type
      type: object
      properties:
        payment_option:
          pattern: OPEN_INVOICE
          type: string
          example: OPEN_INVOICE
          enum:
          - OPEN_INVOICE
        transfer_type:
          pattern: BANK_TRANSFER
          type: string
          example: BANK_TRANSFER
          enum:
          - BANK_TRANSFER
    PersonDto:
      required:
      - date_of_birth
      - first_name
      - last_name
      type: object
      properties:
        first_name:
          maxLength: 100
          minLength: 0
          type: string
          example: Heinz
        last_name:
          maxLength: 100
          minLength: 0
          type: string
          example: Steeger
        title:
          maxLength: 45
          minLength: 0
          type: string
          example: Dr.
        date_of_birth:
          type: string
          format: date
          example: 1971-05-19
    ShopBasketDto:
      required:
      - gross_amount
      - partner_shop_id
      type: object
      properties:
        partner_shop_id:
          maxLength: 255
          minLength: 0
          type: string
          description: arbitrary ID of partner to identify the shop
          example: partner-shop-id-1
        gross_amount:
          multipleOf: 0.01
          minimum: 0.0
          exclusiveMinimum: true
          type: number
          description: amount for the basket incl. VAT
          example: 33.8
        items:
          maxItems: 2147483647
          minItems: 1
          type: array
          description: list of items contained in the transaction
          items:
            $ref: '#/components/schemas/ItemDto'
        special_items:
          type: array
          description: "list of special items contained in the transaction, e.g. shipping\
            \ costs or discounts"
          items:
            $ref: '#/components/schemas/ItemDto'
      description: baskets for each shop contained in the transaction
    ShopDto:
      required:
      - correspondence_settings
      - legal
      - merchant_category_code
      - name
      - partner_shop_id
      type: object
      properties:
        partner_shop_id:
          maxLength: 255
          minLength: 2
          type: string
          example: partner-shop-id-1
        name:
          maxLength: 255
          minLength: 2
          type: string
          example: fruits and more
        merchant_category_code:
          pattern: "[0-9]{4}"
          type: string
          example: "5499"
        legal:
          $ref: '#/components/schemas/ShopLegalDto'
        correspondence_settings:
          $ref: '#/components/schemas/CorrespondenceSettingsDto'
      description: shops contained in the transaction
    ShopLegalDto:
      required:
      - commercial_register_number
      - name
      type: object
      properties:
        commercial_register_number:
          maxLength: 255
          minLength: 2
          type: string
          example: HRB 12345 (FF)
        legal_form:
          maxLength: 255
          minLength: 2
          type: string
          example: GmbH
        name:
          maxLength: 255
          minLength: 2
          type: string
          example: Fruits and more GmbH
    SlangDto:
      required:
      - customer_contact_service
      type: object
      properties:
        salutation:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: "Word for salutation in the buyer correspondences in this language,\
            \ e.g. Hi, Hello, Hallo, Guten Tag, etc."
          example: Hello
        name_format:
          pattern: FIRST_NAME|LAST_NAME|FIRST_LAST_NAME
          type: string
          description: "Specifies how to visualize the buyer's name after the salutation\
            \ in the buyer correspondences. Allowed values: FIRST_NAME, LAST_NAME\
            \ or FIRST_LAST_NAME"
          example: FIRST_LAST_NAME
          enum:
          - FIRST_NAME
          - LAST_NAME
          - FIRST_LAST_NAME
        transaction_type:
          pattern: ORDER|BOOKING
          type: string
          description: "Specifies how to call the transaction in buyer correspondences.\
            \ Allowed values: ORDER or BOOKING"
          example: ORDER
          enum:
          - ORDER
          - BOOKING
        formal_tone:
          pattern: FORMAL|INFORMAL
          type: string
          description: "Formality level for the buyer correspondences. Allowed values:\
            \ FORMAL or INFORMAL"
          example: INFORMAL
          enum:
          - FORMAL
          - INFORMAL
        customer_contact_service:
          maxItems: 5
          minItems: 1
          type: array
          description: List of 1 to 5 lines with correspondence information. Include
            how to reach customer support.
          example:
          - You can reach our customer service Mon - Sun 7 am to 8 pm
          - "by mail: customer-service@example.com"
          - "by phone: 030 / 123 456 789"
          - "contact form: example.com/contact"
          items:
            type: string
            description: List of 1 to 5 lines with correspondence information. Include
              how to reach customer support.
            example: "[\"You can reach our customer service Mon - Sun 7 am to 8 pm\"\
              ,\"by mail: customer-service@example.com\",\"by phone: 030 / 123 456\
              \ 789\",\"contact form: example.com/contact\"]"
    SlangsDto:
      required:
      - de
      type: object
      properties:
        de:
          $ref: '#/components/schemas/SlangDto'
        en:
          $ref: '#/components/schemas/SlangDto'
      description: Language settings for buyer correspondences.
    TransactionRequestDto:
      required:
      - buyer
      - currency
      - payment_method
      - shop_baskets
      - shops
      type: object
      properties:
        partner_transaction_id:
          type: string
          example: transaction-id-1234
        payment_method:
          $ref: '#/components/schemas/PaymentMethodDto'
        currency:
          pattern: "[A-Z]{3}"
          type: string
          example: EUR
        buyer:
          $ref: '#/components/schemas/BuyerDto'
        delivery:
          $ref: '#/components/schemas/DeliveryDto'
        shops:
          type: array
          description: shops contained in the transaction
          items:
            $ref: '#/components/schemas/ShopDto'
        shop_baskets:
          type: array
          description: baskets for each shop contained in the transaction
          items:
            $ref: '#/components/schemas/ShopBasketDto'
    DeclineDto:
      required:
      - category
      - reasons
      type: object
      properties:
        category:
          type: string
          enum:
          - BUYER_IDENTITY
          - SYNTAX
          - CONTRACT
        reasons:
          type: array
          items:
            type: string
            enum:
            - INVALID_BILLING_ADDRESS
            - INVALID_DELIVERY_ADDRESS
            - CURRENCY_NOT_ALLOWED
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
    TransactionErrorDto:
      required:
      - created
      - decline
      - ratepay_transaction_id
      type: object
      properties:
        ratepay_transaction_id:
          type: string
        created:
          type: string
          format: date-time
        decline:
          $ref: '#/components/schemas/DeclineDto'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    TransactionMinimalResponseDto:
      required:
      - created
      - ratepay_payment_reference
      - ratepay_transaction_id
      type: object
      properties:
        ratepay_transaction_id:
          type: string
          description: Ratepay transaction ID
        created:
          type: string
          description: timestamp with offset according to ISO-8601
          format: date-time
        ratepay_payment_reference:
          type: string
          description: reference to supply with payment generated by Ratepay
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    RefundRequestDto:
      required:
      - gross_amount
      type: object
      properties:
        partner_operation_id:
          maxLength: 255
          minLength: 0
          type: string
          description: arbitrary ID of partner for refund
          example: refund-id-1234
        gross_amount:
          multipleOf: 0.01
          type: number
          description: amount to refund given in currency of original transaction
          example: 20.95
    RefundErrorDto:
      required:
      - decline
      type: object
      properties:
        decline:
          $ref: '#/components/schemas/DeclineDto'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    RefundMinimalResponseDto:
      required:
      - created
      - ratepay_refund_id
      type: object
      properties:
        ratepay_refund_id:
          maxLength: 36
          minLength: 36
          type: string
          description: ID of confirmed refund generated by Ratepay
          example: e5c8d074-67a0-45e4-aa8a-1d30fdce4f45
        created:
          type: string
          description: timestamp with offset according to ISO-8601
          format: date-time
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CaptureRequestDto:
      required:
      - gross_amount
      type: object
      properties:
        partner_operation_id:
          maxLength: 255
          minLength: 0
          type: string
          description: arbitrary ID of partner for capture
          example: capture-id-1234
        gross_amount:
          multipleOf: 0.01
          type: number
          description: amount to capture given in currency of original transaction
          example: 20.95
    CaptureErrorDto:
      required:
      - decline
      type: object
      properties:
        decline:
          $ref: '#/components/schemas/DeclineDto'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CaptureMinimalResponseDto:
      required:
      - created
      - ratepay_capture_id
      type: object
      properties:
        ratepay_capture_id:
          maxLength: 36
          minLength: 36
          type: string
          description: ID of confirmed capture generated by Ratepay
          example: bcbfd606-8108-43cd-80b9-66237bee7bb8
        created:
          type: string
          description: timestamp with offset according to ISO-8601
          format: date-time
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
